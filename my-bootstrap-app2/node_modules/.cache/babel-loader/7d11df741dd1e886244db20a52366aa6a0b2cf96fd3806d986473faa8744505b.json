{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport CreateTask from './pages/CreateTask';\nimport Home from './pages/Home';\nimport TaskDetail from './pages/TaskDetails';\nimport Tasks from './pages/Tasks';\nimport { useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport Callback from './pages/Callback'; // You'll need to create this\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    // Check for existing session on app load\n    const token = Cookies.get('idToken');\n    if (token) {\n      // You might want to verify token or check expiration here\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tasks\",\n          element: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tasks/:id\",\n          element: /*#__PURE__*/_jsxDEV(TaskDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create-task\",\n          element: /*#__PURE__*/_jsxDEV(CreateTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/callback\",\n          element: /*#__PURE__*/_jsxDEV(Callback, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \"// Add error route\", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginErrorPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","BrowserRouter","Router","Routes","Navbar","CreateTask","Home","TaskDetail","Tasks","useEffect","Cookies","Callback","jsxDEV","_jsxDEV","App","_s","token","get","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","LoginErrorPage","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/App.js"],"sourcesContent":["import { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport CreateTask from './pages/CreateTask';\r\nimport Home from './pages/Home';\r\nimport TaskDetail from './pages/TaskDetails';\r\nimport Tasks from './pages/Tasks';\r\nimport { useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport Callback from './pages/Callback'; // You'll need to create this\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    // Check for existing session on app load\r\n    const token = Cookies.get('idToken');\r\n    if (token) {\r\n      // You might want to verify token or check expiration here\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <div className=\"container mt-4\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/tasks\" element={<Tasks />} />\r\n          <Route path=\"/tasks/:id\" element={<TaskDetail />} />\r\n          <Route path=\"/create-task\" element={<CreateTask />} />\r\n          <Route path=\"/callback\" element={<Callback />} />\r\n          // Add error route\r\n<Route path=\"/login\" element={<LoginErrorPage />} />\r\n          {/* <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/signup\" element={<Signup />} />\r\n          <Route path=\"/profile\" element={<Profile />} /> */}\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,aAAa,IAAIC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,KAAK,GAAGN,OAAO,CAACO,GAAG,CAAC,SAAS,CAAC;IACpC,IAAID,KAAK,EAAE;MACT;IAAA;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA,CAACX,MAAM;IAAAgB,QAAA,gBACLL,OAAA,CAACT,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVT,OAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC7BL,OAAA,CAACV,MAAM;QAAAe,QAAA,gBACLL,OAAA,CAACb,KAAK;UAACwB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEZ,OAAA,CAACP,IAAI;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrCT,OAAA,CAACb,KAAK;UAACwB,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEZ,OAAA,CAACL,KAAK;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CT,OAAA,CAACb,KAAK;UAACwB,IAAI,EAAC,YAAY;UAACC,OAAO,eAAEZ,OAAA,CAACN,UAAU;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDT,OAAA,CAACb,KAAK;UAACwB,IAAI,EAAC,cAAc;UAACC,OAAO,eAAEZ,OAAA,CAACR,UAAU;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtDT,OAAA,CAACb,KAAK;UAACwB,IAAI,EAAC,WAAW;UAACC,OAAO,eAAEZ,OAAA,CAACF,QAAQ;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,sBAE3D,eAAAT,OAAA,CAACb,KAAK;UAACwB,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEZ,OAAA,CAACa,cAAc;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACP,EAAA,CA5BQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}