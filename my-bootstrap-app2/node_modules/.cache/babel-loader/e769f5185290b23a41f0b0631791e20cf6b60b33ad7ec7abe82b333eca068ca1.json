{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\TaskDetails.jsx\",\n  _s = $RefreshSig$();\n// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Spinner, Alert, Button, Form, Row, Col, ListGroup } from 'react-bootstrap';\nimport api from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  useEffect(() => {\n    async function loadTask() {\n      try {\n        const resp = await api.get(`/tasks/${id}`);\n        setTask(resp.data);\n      } catch (err) {\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadTask();\n  }, [id]);\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      const formData = new FormData();\n\n      // 1) pack all updatable fields (including existing attachments)\n      const payload = {\n        title: task.title,\n        description: task.description || '',\n        status: task.status || 'Pending',\n        attachments: task.attachments || []\n      };\n      formData.append('data', JSON.stringify(payload));\n\n      // 2) append any new files\n      selectedFiles.forEach(f => formData.append('attachments', f));\n\n      // 3) send multipart/form-data\n      await api.put(`/tasks/${id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      navigate('/tasks');\n    } catch (err) {\n      setError(err.message || 'Failed to save changes');\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setDeleting(true);\n    try {\n      await api.delete(`/tasks/${id}`);\n      navigate('/tasks');\n    } catch (err) {\n      setError(err.message || 'Failed to delete task');\n    } finally {\n      setDeleting(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 23\n  }, this);\n  if (!task) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Task not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: task.title,\n            onChange: e => setTask({\n              ...task,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"taskDescription\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: task.description || '',\n          onChange: e => setTask({\n            ...task,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskStatus\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: task.status || 'Pending',\n            onChange: e => setTask({\n              ...task,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 27\n          }, this), \" \", task.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), \" \", new Date(task.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), \" \", new Date(task.updated_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Attachments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), task.attachments && task.attachments.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: task.attachments.map((url, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: url.split('/').pop()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No attachments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"taskFiles\",\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setSelectedFiles([...e.target.files])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSave,\n            disabled: saving,\n            children: saving ? 'Saving…' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleDelete,\n            disabled: deleting,\n            children: deleting ? 'Deleting…' : 'Delete Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetail, \"XbDkUoLDgXdNSSiqjHA1EHWUmcQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Spinner","Alert","Button","Form","Row","Col","ListGroup","api","useParams","useNavigate","jsxDEV","_jsxDEV","TaskDetail","_s","id","navigate","task","setTask","loading","setLoading","error","setError","saving","setSaving","deleting","setDeleting","selectedFiles","setSelectedFiles","loadTask","resp","get","data","err","message","handleSave","formData","FormData","payload","title","description","status","attachments","append","JSON","stringify","forEach","f","put","headers","handleDelete","window","confirm","delete","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","Group","as","controlId","Label","column","sm","Control","type","value","onChange","e","target","rows","Select","Item","user_id","Date","created_at","toLocaleString","updated_at","length","map","url","i","href","rel","split","pop","multiple","files","onClick","disabled","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/TaskDetails.jsx"],"sourcesContent":["// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Spinner,\n  Alert,\n  Button,\n  Form,\n  Row,\n  Col,\n  ListGroup\n} from 'react-bootstrap';\nimport api from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function TaskDetail() {\n  const { id }           = useParams();\n  const navigate         = useNavigate();\n\n  const [task, setTask]  = useState(null);\n  const [loading, setLoading]   = useState(true);\n  const [error, setError]       = useState(null);\n  const [saving, setSaving]     = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  useEffect(() => {\n    async function loadTask() {\n      try {\n        const resp = await api.get(`/tasks/${id}`);\n        setTask(resp.data);\n      } catch (err) {\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadTask();\n  }, [id]);\n\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      const formData = new FormData();\n\n      // 1) pack all updatable fields (including existing attachments)\n      const payload = {\n        title:       task.title,\n        description: task.description || '',\n        status:      task.status || 'Pending',\n        attachments: task.attachments || []\n      };\n      formData.append('data', JSON.stringify(payload));\n\n      // 2) append any new files\n      selectedFiles.forEach(f => formData.append('attachments', f));\n\n      // 3) send multipart/form-data\n      await api.put(`/tasks/${id}`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      navigate('/tasks');\n    } catch (err) {\n      setError(err.message || 'Failed to save changes');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setDeleting(true);\n    try {\n      await api.delete(`/tasks/${id}`);\n      navigate('/tasks');\n    } catch (err) {\n      setError(err.message || 'Failed to delete task');\n    } finally {\n      setDeleting(false);\n    }\n  };\n\n  if (loading) return <Container className=\"mt-4\"><Spinner animation=\"border\" /></Container>;\n  if (error)   return <Container className=\"mt-4\"><Alert variant=\"danger\">{error}</Alert></Container>;\n  if (!task)   return <Container className=\"mt-4\"><Alert variant=\"warning\">Task not found</Alert></Container>;\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Task Details</h2>\n      <Form>\n        {/* Title */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskTitle\">\n          <Form.Label column sm={2}>Title</Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"text\"\n              value={task.title}\n              onChange={e => setTask({ ...task, title: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n\n        {/* Description */}\n        <Form.Group className=\"mb-3\" controlId=\"taskDescription\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            value={task.description || ''}\n            onChange={e => setTask({ ...task, description: e.target.value })}\n          />\n        </Form.Group>\n\n        {/* Status */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskStatus\">\n          <Form.Label column sm={2}>Status</Form.Label>\n          <Col sm={10}>\n            <Form.Select\n              value={task.status || 'Pending'}\n              onChange={e => setTask({ ...task, status: e.target.value })}\n            >\n              <option>Pending</option>\n              <option>In Progress</option>\n              <option>Completed</option>\n            </Form.Select>\n          </Col>\n        </Form.Group>\n\n        {/* Read-only fields */}\n        <ListGroup className=\"mb-3\">\n          <ListGroup.Item><strong>User ID:</strong> {task.user_id}</ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Created:</strong> {new Date(task.created_at).toLocaleString()}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Last Updated:</strong> {new Date(task.updated_at).toLocaleString()}\n          </ListGroup.Item>\n        </ListGroup>\n\n        {/* Existing Attachments */}\n        <h5>Attachments</h5>\n        {task.attachments && task.attachments.length > 0 ? (\n          <ListGroup className=\"mb-3\">\n            {task.attachments.map((url, i) => (\n              <ListGroup.Item key={i}>\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {url.split('/').pop()}\n                </a>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        ) : (\n          <p className=\"text-muted\">No attachments yet.</p>\n        )}\n\n        {/* New Attachments */}\n        <Form.Group controlId=\"taskFiles\" className=\"mb-4\">\n          <Form.Label>Upload Attachments</Form.Label>\n          <Form.Control\n            type=\"file\"\n            multiple\n            onChange={e => setSelectedFiles([...e.target.files])}\n          />\n        </Form.Group>\n\n        {/* Action Buttons */}\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={handleSave}\n              disabled={saving}\n            >\n              {saving ? 'Saving…' : 'Save Changes'}\n            </Button>\n          </Col>\n          <Col className=\"text-end\">\n            <Button\n              variant=\"danger\"\n              onClick={handleDelete}\n              disabled={deleting}\n            >\n              {deleting ? 'Deleting…' : 'Delete Task'}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}