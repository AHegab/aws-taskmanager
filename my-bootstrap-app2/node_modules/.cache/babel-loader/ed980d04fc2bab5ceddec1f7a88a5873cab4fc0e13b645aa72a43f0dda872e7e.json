{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\Callback.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\n// Configuration - update these values with your actual Cognito settings\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COGNITO_CONFIG = {\n  domain: 'eu-north-1u8wcgtv8c.auth.eu-north-1.amazoncognito.com',\n  clientId: '6thkk9j96oa02djeccritml1gr',\n  redirectUri: 'http://localhost:3000/callback',\n  tokenEndpoint: '/oauth2/token',\n  clientSecret: 'fndut3no3vqopsat6vo97hnrq40vtp2891vl07be8piavi46h8h' // if confidential\n};\nexport default function Callback() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleAuthentication = async () => {\n      console.log('Handling authentication callback...');\n      const params = new URLSearchParams(location.search);\n      const code = params.get('code');\n      const error = params.get('error');\n      if (error) {\n        console.error('Authentication error:', {\n          error: error,\n          description: params.get('error_description'),\n          uri: params.get('error_uri')\n        });\n        navigate(`/login?error=${error}`);\n        return;\n      }\n      if (!code) {\n        console.error('Missing authorization code');\n        navigate('/login?error=missing_code');\n        return;\n      }\n      try {\n        console.log('Exchanging authorization code for tokens...');\n        const tokenParams = new URLSearchParams();\n        tokenParams.append('grant_type', 'authorization_code');\n        tokenParams.append('client_id', COGNITO_CONFIG.clientId);\n        tokenParams.append('code', code);\n        tokenParams.append('redirect_uri', COGNITO_CONFIG.redirectUri);\n        if (COGNITO_CONFIG.clientSecret) {\n          tokenParams.append('client_secret', COGNITO_CONFIG.clientSecret);\n        }\n        const response = await axios.post(`https://${COGNITO_CONFIG.domain}${COGNITO_CONFIG.tokenEndpoint}`, tokenParams.toString(), {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          timeout: 10000\n        });\n        console.log('Token exchange successful:', {\n          access_token: !!response.data.access_token,\n          id_token: !!response.data.id_token,\n          refresh_token: !!response.data.refresh_token\n        });\n\n        // Store tokens securely\n        Cookies.set('idToken', response.data.id_token, {\n          expires: 1,\n          secure: process.env.NODE_ENV === 'production',\n          sameSite: 'lax'\n        });\n        Cookies.set('accessToken', response.data.access_token, {\n          expires: 1,\n          secure: process.env.NODE_ENV === 'production',\n          sameSite: 'lax'\n        });\n        if (response.data.refresh_token) {\n          Cookies.set('refreshToken', response.data.refresh_token, {\n            expires: 30,\n            secure: process.env.NODE_ENV === 'production',\n            sameSite: 'lax'\n          });\n        }\n\n        // âœ… Trigger backend Lambda to send SES verification\n        try {\n          const verifyResponse = await axios.post('https://xppo00vwz7.execute-api.eu-north-1.amazonaws.com/prod/auth/callback',\n          // TODO: Replace with your actual API Gateway endpoint\n          {}, {\n            headers: {\n              Authorization: `Bearer ${response.data.id_token}`\n            }\n          });\n          console.log('SES verification triggered:', verifyResponse.data);\n        } catch (error) {\n          var _error$response;\n          console.error('SES verification failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        }\n        navigate('/');\n      } catch (err) {\n        var _err$response, _err$config, _err$config2, _err$config3;\n        console.error('Token exchange failed:', {\n          message: err.message,\n          response: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data,\n          config: {\n            url: (_err$config = err.config) === null || _err$config === void 0 ? void 0 : _err$config.url,\n            method: (_err$config2 = err.config) === null || _err$config2 === void 0 ? void 0 : _err$config2.method,\n            data: (_err$config3 = err.config) === null || _err$config3 === void 0 ? void 0 : _err$config3.data\n          }\n        });\n        let errorMessage = 'token_exchange_failed';\n        if (err.response) {\n          if (err.response.status === 400) {\n            errorMessage = err.response.data.error || 'invalid_request';\n          } else if (err.response.status === 401) {\n            errorMessage = 'invalid_client';\n          }\n        }\n        navigate(`/login?error=${errorMessage}`);\n      }\n    };\n    handleAuthentication();\n  }, [location, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"callback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Processing Authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please wait while we complete your login.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(Callback, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Callback;\nvar _c;\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"names":["useEffect","useNavigate","useLocation","Cookies","axios","jsxDEV","_jsxDEV","COGNITO_CONFIG","domain","clientId","redirectUri","tokenEndpoint","clientSecret","Callback","_s","location","navigate","handleAuthentication","console","log","params","URLSearchParams","search","code","get","error","description","uri","tokenParams","append","response","post","toString","headers","timeout","access_token","data","id_token","refresh_token","set","expires","secure","process","env","NODE_ENV","sameSite","verifyResponse","Authorization","_error$response","message","err","_err$response","_err$config","_err$config2","_err$config3","config","url","method","errorMessage","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/Callback.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\n// Configuration - update these values with your actual Cognito settings\nconst COGNITO_CONFIG = {\n  domain: 'eu-north-1u8wcgtv8c.auth.eu-north-1.amazoncognito.com',\n  clientId: '6thkk9j96oa02djeccritml1gr',\n  redirectUri: 'http://localhost:3000/callback',\n  tokenEndpoint: '/oauth2/token',\n  clientSecret: 'fndut3no3vqopsat6vo97hnrq40vtp2891vl07be8piavi46h8h' // if confidential\n};\n\nexport default function Callback() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleAuthentication = async () => {\n      console.log('Handling authentication callback...');\n\n      const params = new URLSearchParams(location.search);\n      const code = params.get('code');\n      const error = params.get('error');\n\n      if (error) {\n        console.error('Authentication error:', {\n          error: error,\n          description: params.get('error_description'),\n          uri: params.get('error_uri')\n        });\n        navigate(`/login?error=${error}`);\n        return;\n      }\n\n      if (!code) {\n        console.error('Missing authorization code');\n        navigate('/login?error=missing_code');\n        return;\n      }\n\n      try {\n        console.log('Exchanging authorization code for tokens...');\n\n        const tokenParams = new URLSearchParams();\n        tokenParams.append('grant_type', 'authorization_code');\n        tokenParams.append('client_id', COGNITO_CONFIG.clientId);\n        tokenParams.append('code', code);\n        tokenParams.append('redirect_uri', COGNITO_CONFIG.redirectUri);\n\n        if (COGNITO_CONFIG.clientSecret) {\n          tokenParams.append('client_secret', COGNITO_CONFIG.clientSecret);\n        }\n\n        const response = await axios.post(\n          `https://${COGNITO_CONFIG.domain}${COGNITO_CONFIG.tokenEndpoint}`,\n          tokenParams.toString(),\n          {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            timeout: 10000\n          }\n        );\n\n        console.log('Token exchange successful:', {\n          access_token: !!response.data.access_token,\n          id_token: !!response.data.id_token,\n          refresh_token: !!response.data.refresh_token\n        });\n\n        // Store tokens securely\n        Cookies.set('idToken', response.data.id_token, {\n          expires: 1,\n          secure: process.env.NODE_ENV === 'production',\n          sameSite: 'lax'\n        });\n        Cookies.set('accessToken', response.data.access_token, {\n          expires: 1,\n          secure: process.env.NODE_ENV === 'production',\n          sameSite: 'lax'\n        });\n\n        if (response.data.refresh_token) {\n          Cookies.set('refreshToken', response.data.refresh_token, {\n            expires: 30,\n            secure: process.env.NODE_ENV === 'production',\n            sameSite: 'lax'\n          });\n        }\n\n        // âœ… Trigger backend Lambda to send SES verification\n        try {\n          const verifyResponse = await axios.post(\n            'https://xppo00vwz7.execute-api.eu-north-1.amazonaws.com/prod/auth/callback', // TODO: Replace with your actual API Gateway endpoint\n            {},\n            {\n              headers: {\n                Authorization: `Bearer ${response.data.id_token}`\n              }\n            }\n          );\n          console.log('SES verification triggered:', verifyResponse.data);\n        } catch (error) {\n          console.error('SES verification failed:', error.response?.data || error.message);\n        }\n\n        navigate('/');\n\n      } catch (err) {\n        console.error('Token exchange failed:', {\n          message: err.message,\n          response: err.response?.data,\n          config: {\n            url: err.config?.url,\n            method: err.config?.method,\n            data: err.config?.data\n          }\n        });\n\n        let errorMessage = 'token_exchange_failed';\n        if (err.response) {\n          if (err.response.status === 400) {\n            errorMessage = err.response.data.error || 'invalid_request';\n          } else if (err.response.status === 401) {\n            errorMessage = 'invalid_client';\n          }\n        }\n\n        navigate(`/login?error=${errorMessage}`);\n      }\n    };\n\n    handleAuthentication();\n  }, [location, navigate]);\n\n  return (\n    <div className=\"callback-container\">\n      <h2>Processing Authentication...</h2>\n      <p>Please wait while we complete your login.</p>\n      <div className=\"spinner\"></div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}