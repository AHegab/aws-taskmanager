{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\login.jsx\",\n  _s = $RefreshSig$();\n// src/pages/login.js\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [error, setError] = useState('');\n  const onSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const resp = await fetch(`https://k8xh767ord.execute-api.eu-north-1.amazonaws.com/yarab/auth/token`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // ← accept HttpOnly cookies\n        body: JSON.stringify({\n          // send JSON payload\n          username: email,\n          password: pass\n        })\n      });\n      console.log('Response:', resp);\n      if (!resp.ok) {\n        const errText = await resp.text();\n        throw new Error(errText);\n      }\n\n      // tokens are set via HttpOnly cookies by your Lambda\n      window.location.href = '/';\n    } catch (err) {\n      console.error(err);\n      setError('Login failed: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: '2rem auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: pass,\n          onChange: e => setPass(e.target.value),\n          required: true,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: 12\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Shlp2It1TfeMhjjY1Z+yS4Tc594=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE_URL","Login","_s","email","setEmail","pass","setPass","error","setError","onSubmit","e","preventDefault","resp","fetch","method","headers","credentials","body","JSON","stringify","username","password","console","log","ok","errText","text","Error","window","location","href","err","message","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","width","marginTop","color","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/login.jsx"],"sourcesContent":["// src/pages/login.js\nimport { useState } from 'react';\n\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [error, setError] = useState('');\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const resp = await fetch(\n        `https://k8xh767ord.execute-api.eu-north-1.amazonaws.com/yarab/auth/token`,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          credentials: 'include',            // ← accept HttpOnly cookies\n          body: JSON.stringify({             // send JSON payload\n            username: email,\n            password: pass\n          })\n        }\n      );\n      console.log('Response:', resp);\n\n      if (!resp.ok) {\n        const errText = await resp.text();\n        throw new Error(errText);\n      }\n\n      // tokens are set via HttpOnly cookies by your Lambda\n      window.location.href = '/';\n    } catch (err) {\n      console.error(err);\n      setError('Login failed: ' + err.message);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: '2rem auto' }}>\n      <h2>Sign In</h2>\n      <form onSubmit={onSubmit}>\n        <div>\n          <label>Username</label><br />\n          <input\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            required\n            style={{ width: '100%' }}\n          />\n        </div>\n        <div style={{ marginTop: 8 }}>\n          <label>Password</label><br />\n          <input\n            type=\"password\"\n            value={pass}\n            onChange={e => setPass(e.target.value)}\n            required\n            style={{ width: '100%' }}\n          />\n        </div>\n        <button type=\"submit\" style={{ marginTop: 12 }}>\n          Login\n        </button>\n      </form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}