{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\TaskDetails.jsx\",\n  _s = $RefreshSig$();\n// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Spinner, Alert, Button, Form, Row, Col, ListGroup } from 'react-bootstrap';\nimport api from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  useEffect(() => {\n    async function loadTask() {\n      try {\n        var _data$metadata;\n        const resp = await api.get(`/tasks/${id}`);\n        console.log('raw task payload:', resp.data);\n        // 1) Unwrap the API Gateway envelope\n        let data = resp.data;\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body);\n        } else if (data.task) {\n          data = data.task;\n        }\n\n        // 2) Pull Created/Updated from metadata.activity_log\n        if ((_data$metadata = data.metadata) !== null && _data$metadata !== void 0 && _data$metadata.activity_log) {\n          const logs = data.metadata.activity_log;\n          const parseTime = label => {\n            const entry = logs.find(l => l.startsWith(label + ' at '));\n            return entry ? entry.split(' at ')[1] : null;\n          };\n          data.created_at = parseTime('Created');\n          data.updated_at = parseTime('Updated');\n        }\n        setTask(data);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadTask();\n  }, [id]);\n\n  // … your handleSave and handleDelete remain the same (drop the manual\n  //    Content-Type override on the PUT so Axios sets the multipart boundary)\n\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this);\n  if (!task) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Task not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), \" \", task.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), ' ', task.created_at ? new Date(task.created_at).toLocaleString() : '—']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), ' ', task.updated_at ? new Date(task.updated_at).toLocaleString() : '—']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetail, \"XbDkUoLDgXdNSSiqjHA1EHWUmcQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Spinner","Alert","Button","Form","Row","Col","ListGroup","api","useParams","useNavigate","jsxDEV","_jsxDEV","TaskDetail","_s","id","navigate","task","setTask","loading","setLoading","error","setError","saving","setSaving","deleting","setDeleting","selectedFiles","setSelectedFiles","loadTask","_data$metadata","resp","get","console","log","data","body","JSON","parse","metadata","activity_log","logs","parseTime","label","entry","find","l","startsWith","split","created_at","updated_at","err","message","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","Item","user_id","Date","toLocaleString","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/TaskDetails.jsx"],"sourcesContent":["// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Spinner,\n  Alert,\n  Button,\n  Form,\n  Row,\n  Col,\n  ListGroup\n} from 'react-bootstrap';\nimport api from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function TaskDetail() {\n  const { id }           = useParams();\n  const navigate         = useNavigate();\n\n  const [task, setTask]  = useState(null);\n  const [loading, setLoading]   = useState(true);\n  const [error, setError]       = useState(null);\n  const [saving, setSaving]     = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  useEffect(() => {\n    async function loadTask() {\n      try {\n        const resp = await api.get(`/tasks/${id}`);\n        console.log('raw task payload:', resp.data);\n        // 1) Unwrap the API Gateway envelope\n        let data = resp.data;\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body);\n        } else if (data.task) {\n          data = data.task;\n        }\n\n        // 2) Pull Created/Updated from metadata.activity_log\n        if (data.metadata?.activity_log) {\n          const logs = data.metadata.activity_log;\n          const parseTime = (label) => {\n            const entry = logs.find(l => l.startsWith(label + ' at '));\n            return entry ? entry.split(' at ')[1] : null;\n          };\n          data.created_at = parseTime('Created');\n          data.updated_at = parseTime('Updated');\n        }\n\n        setTask(data);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadTask();\n  }, [id]);\n\n  // … your handleSave and handleDelete remain the same (drop the manual\n  //    Content-Type override on the PUT so Axios sets the multipart boundary)\n\n  if (loading)   return <Container className=\"mt-4\"><Spinner animation=\"border\" /></Container>;\n  if (error)     return <Container className=\"mt-4\"><Alert variant=\"danger\">{error}</Alert></Container>;\n  if (!task)     return <Container className=\"mt-4\"><Alert variant=\"warning\">Task not found</Alert></Container>;\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Task Details</h2>\n      <Form>\n        {/* … your form groups for Title, Description, Status stay the same … */}\n\n        {/* Read-only fields */}\n        <ListGroup className=\"mb-3\">\n          <ListGroup.Item>\n            <strong>User ID:</strong> {task.user_id}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Created:</strong>{' '}\n            {task.created_at\n              ? new Date(task.created_at).toLocaleString()\n              : '—'}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Last Updated:</strong>{' '}\n            {task.updated_at\n              ? new Date(task.updated_at).toLocaleString()\n              : '—'}\n          </ListGroup.Item>\n        </ListGroup>\n\n        {/* … the rest of your attachments and buttons … */}\n\n      </Form>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}