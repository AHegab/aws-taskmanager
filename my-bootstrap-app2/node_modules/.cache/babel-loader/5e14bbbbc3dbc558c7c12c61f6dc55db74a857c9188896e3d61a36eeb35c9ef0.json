{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Tasks.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, Spinner, Alert, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        // Fetch tasks for the currently logged-in user\n        const resp = await api.get('/tasks');\n        console.log('raw tasks payload:', resp.data);\n        let list = [];\n\n        // If your backend wraps the array in a JSON-string \"body\"\n        if (resp.data && typeof resp.data.body === 'string') {\n          try {\n            list = JSON.parse(resp.data.body);\n          } catch (parseErr) {\n            console.error('Failed to parse body JSON', parseErr);\n            throw new Error('Invalid task data format');\n          }\n        }\n        // If resp.data already is an array\n        else if (Array.isArray(resp.data)) {\n          list = resp.data;\n        }\n        // If resp.data.tasks is the array\n        else if (resp.data && Array.isArray(resp.data.tasks)) {\n          list = resp.data.tasks;\n        }\n        setTasks(list);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load tasks');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTasks();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No tasks found.\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-task\",\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), task.description && /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Status: \", task.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: Link,\n              to: `/tasks/${task.taskId}`,\n              variant: \"primary\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","Card","Button","Spinner","Alert","Container","Link","api","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","resp","get","console","log","data","list","body","JSON","parse","parseErr","Error","Array","isArray","err","message","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","length","to","map","task","Body","Title","title","description","Text","status","as","taskId","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/Tasks.jsx"],"sourcesContent":["// src/pages/Tasks.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, Spinner, Alert, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport api from '../api';\n\nexport default function Tasks() {\n  const [tasks, setTasks]     = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError]     = useState(null);\n\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        // Fetch tasks for the currently logged-in user\n        const resp = await api.get('/tasks');\n        console.log('raw tasks payload:', resp.data);\n\n        let list = [];\n\n        // If your backend wraps the array in a JSON-string \"body\"\n        if (resp.data && typeof resp.data.body === 'string') {\n          try {\n            list = JSON.parse(resp.data.body);\n          } catch (parseErr) {\n            console.error('Failed to parse body JSON', parseErr);\n            throw new Error('Invalid task data format');\n          }\n        }\n        // If resp.data already is an array\n        else if (Array.isArray(resp.data)) {\n          list = resp.data;\n        }\n        // If resp.data.tasks is the array\n        else if (resp.data && Array.isArray(resp.data.tasks)) {\n          list = resp.data.tasks;\n        }\n\n        setTasks(list);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load tasks');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTasks();\n  }, []);\n\n  if (loading) {\n    return (\n      <Container className=\"mt-4 text-center\">\n        <Spinner animation=\"border\" />\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container className=\"mt-4\">\n        <Alert variant=\"danger\">{error}</Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Your Tasks</h2>\n      {tasks.length === 0 ? (\n        <p>\n          No tasks found.{' '}\n          <Link to=\"/create-task\">Create one now</Link>\n        </p>\n      ) : (\n        <div className=\"row\">\n          {tasks.map((task) => (\n            <div key={task.taskId} className=\"col-md-4 mb-4\">\n              <Card className=\"h-100\">\n                <Card.Body>\n                  <Card.Title>{task.title}</Card.Title>\n                  {task.description && (\n                    <Card.Text>{task.description}</Card.Text>\n                  )}\n                  <Card.Text>\n                    <small>Status: {task.status}</small>\n                  </Card.Text>\n                  <Button\n                    as={Link}\n                    to={`/tasks/${task.taskId}`}\n                    variant=\"primary\"\n                  >\n                    View Details\n                  </Button>\n                </Card.Body>\n              </Card>\n            </div>\n          ))}\n        </div>\n      )}\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}