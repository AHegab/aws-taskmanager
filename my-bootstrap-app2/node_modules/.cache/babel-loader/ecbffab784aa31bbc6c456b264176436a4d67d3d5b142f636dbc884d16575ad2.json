{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || ''\n  // you could also enable cookies, but we’re reading them manually:\n  // withCredentials: true,\n});\napi.interceptors.request.use(config => {\n  // dump the full config so you can inspect it\n  console.log('→ API Request ▶︎', {\n    url: `${config.baseURL}${config.url}`,\n    method: config.method,\n    headers: {\n      ...config.headers\n    } // clone for logging\n  });\n\n  // parse the idToken cookie\n  const match = document.cookie.split('; ').find(row => row.startsWith('idToken='));\n  if (match) {\n    const token = match.split('=')[1];\n    config.headers = config.headers || {};\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('   • attached Authorization:', config.headers.Authorization);\n  } else {\n    console.warn('   ⚠️  no idToken cookie found');\n  }\n  return config;\n}, err => Promise.reject(err));\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","console","log","url","method","headers","match","document","cookie","split","find","row","startsWith","token","Authorization","warn","err","Promise","reject"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '',\n  // you could also enable cookies, but we’re reading them manually:\n  // withCredentials: true,\n});\n\napi.interceptors.request.use((config) => {\n  // dump the full config so you can inspect it\n  console.log('→ API Request ▶︎', {\n    url:    `${config.baseURL}${config.url}`,\n    method: config.method,\n    headers: { ...config.headers } // clone for logging\n  });\n\n  // parse the idToken cookie\n  const match = document.cookie\n    .split('; ')\n    .find(row => row.startsWith('idToken='));\n\n  if (match) {\n    const token = match.split('=')[1];\n    config.headers = config.headers || {};\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('   • attached Authorization:', config.headers.Authorization);\n  } else {\n    console.warn('   ⚠️  no idToken cookie found');\n  }\n\n  return config;\n}, (err) => Promise.reject(err));\n\nexport default api;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;EAC1C;EACA;AACF,CAAC,CAAC;AAEFL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC;EACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;IAC9BC,GAAG,EAAK,GAAGH,MAAM,CAACP,OAAO,GAAGO,MAAM,CAACG,GAAG,EAAE;IACxCC,MAAM,EAAEJ,MAAM,CAACI,MAAM;IACrBC,OAAO,EAAE;MAAE,GAAGL,MAAM,CAACK;IAAQ,CAAC,CAAC;EACjC,CAAC,CAAC;;EAEF;EACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,MAAM,CAC1BC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,UAAU,CAAC,CAAC;EAE1C,IAAIN,KAAK,EAAE;IACT,MAAMO,KAAK,GAAGP,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjCT,MAAM,CAACK,OAAO,GAAGL,MAAM,CAACK,OAAO,IAAI,CAAC,CAAC;IACrCL,MAAM,CAACK,OAAO,CAACS,aAAa,GAAG,UAAUD,KAAK,EAAE;IAChDZ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,MAAM,CAACK,OAAO,CAACS,aAAa,CAAC;EAC3E,CAAC,MAAM;IACLb,OAAO,CAACc,IAAI,CAAC,gCAAgC,CAAC;EAChD;EAEA,OAAOf,MAAM;AACf,CAAC,EAAGgB,GAAG,IAAKC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC,CAAC;AAEhC,eAAezB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}