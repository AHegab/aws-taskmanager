{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\TaskDetails.jsx\",\n  _s = $RefreshSig$();\n// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Spinner, Alert, Button, Form, Row, Col, ListGroup } from 'react-bootstrap';\nimport api from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDetail() {\n  _s();\n  var _task$attachments;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [initialTask, setInitialTask] = useState(null); // Track initial state for diffing\n\n  // Load the task on mount\n  useEffect(() => {\n    ;\n    (async () => {\n      try {\n        var _data$metadata;\n        const resp = await api.get(`/tasks/${id}`);\n        let data = resp.data;\n\n        // unwrap our proxy integration envelope if needed\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body);\n        } else if (data.task) {\n          data = data.task;\n        }\n\n        // pull out created/updated timestamps from activity_log\n        if ((_data$metadata = data.metadata) !== null && _data$metadata !== void 0 && _data$metadata.activity_log) {\n          const logs = data.metadata.activity_log;\n          const findTime = label => {\n            const match = logs.find(l => l.startsWith(label + ' at '));\n            return match ? match.split(' at ')[1] : null;\n          };\n          data.created_at = findTime('Created');\n          data.updated_at = findTime('Updated');\n        }\n        setTask(data);\n        setInitialTask(data); // Store initial state\n      } catch (err) {\n        console.error('Load error:', err);\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [id]);\n\n  // Helper to get changed fields only\n  const getChangedFields = () => {\n    if (!initialTask || !task) return {};\n    const changes = {};\n\n    // Check each field for changes\n    if (task.title !== initialTask.title) changes.title = task.title;\n    if (task.description !== initialTask.description) changes.description = task.description;\n    if (task.status !== initialTask.status) changes.status = task.status;\n    return changes;\n  };\n\n  // Save updates (with optional new attachments)\n  const handleSave = async () => {\n    setSaving(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      const updates = {};\n\n      // Only include changed fields\n      if (task.title !== initialTask.title) updates.title = task.title;\n      if (task.description !== initialTask.description) updates.description = task.description;\n      if (task.status !== initialTask.status) updates.status = task.status;\n\n      // Always include attachments array to prevent overwrite\n      // updates.attachments = task.attachments || [];\n\n      // Check if we have changes or new files\n      if (selectedFiles.length === 0 && Object.keys(updates).length === 1) {\n        // Only attachments count\n        setError('No changes detected');\n        return;\n      }\n      formData.append('data', JSON.stringify(updates));\n      selectedFiles.forEach(f => formData.append('attachments', f));\n      console.log('Sending updates:', updates);\n      console.log('Sending files:', selectedFiles);\n      await api.put(`/tasks/${id}`, formData);\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response;\n      // Handle errors  console.error('Save error:', err.response || err)\n      let msg = 'Failed to save changes';\n      const d = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data;\n      if (d) {\n        if (typeof d === 'string') msg = d;else if (d.error) msg = d.error;else if (d.message) msg = d.message;else msg = JSON.stringify(d);\n      } else if (err.message) {\n        msg = err.message;\n      }\n      setError(msg);\n    } finally {\n      setSaving(false);\n    }\n  };\n  // Delete the task\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setDeleting(true);\n    setError(null);\n    try {\n      await api.delete(`/tasks/${id}`);\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response2;\n      console.error('Delete error:', err.response || err);\n      let msg = 'Failed to delete task';\n      const d = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data;\n      if (d) {\n        if (typeof d === 'string') msg = d;else if (d.error) msg = d.error;else if (d.message) msg = d.message;else msg = JSON.stringify(d);\n      } else if (err.message) {\n        msg = err.message;\n      }\n      setError(msg);\n    } finally {\n      setDeleting(false);\n    }\n  };\n\n  // Render states\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 21\n  }, this);\n  if (!task) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Task not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: task.title || '',\n            onChange: e => setTask({\n              ...task,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"taskDescription\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: task.description || '',\n          onChange: e => setTask({\n            ...task,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskStatus\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: task.status || 'Pending',\n            onChange: e => setTask({\n              ...task,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), ' ', task.created_at ? new Date(task.created_at).toLocaleString() : '—']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), ' ', task.updated_at ? new Date(task.updated_at).toLocaleString() : '—']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Attachments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), (_task$attachments = task.attachments) !== null && _task$attachments !== void 0 && _task$attachments.length ? /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: task.attachments.map((url, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: url.split('/').pop()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No attachments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"taskFiles\",\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setSelectedFiles(Array.from(e.target.files))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSave,\n            disabled: saving,\n            children: saving ? 'Saving…' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleDelete,\n            disabled: deleting,\n            children: deleting ? 'Deleting…' : 'Delete Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetail, \"FkDekCv0VU7uhfiY6x6eaW2f+4c=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Spinner","Alert","Button","Form","Row","Col","ListGroup","api","useParams","useNavigate","jsxDEV","_jsxDEV","TaskDetail","_s","_task$attachments","id","navigate","task","setTask","loading","setLoading","error","setError","saving","setSaving","deleting","setDeleting","selectedFiles","setSelectedFiles","initialTask","setInitialTask","_data$metadata","resp","get","data","body","JSON","parse","metadata","activity_log","logs","findTime","label","match","find","l","startsWith","split","created_at","updated_at","err","console","message","getChangedFields","changes","title","description","status","handleSave","formData","FormData","updates","length","Object","keys","append","stringify","forEach","f","log","put","_err$response","msg","d","response","handleDelete","window","confirm","delete","_err$response2","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","Group","as","controlId","Label","column","sm","Control","type","value","onChange","e","target","rows","Select","Item","Date","toLocaleString","attachments","map","url","i","href","rel","pop","multiple","Array","from","files","onClick","disabled","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/TaskDetails.jsx"],"sourcesContent":["// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react'\nimport {\n  Container,\n  Spinner,\n  Alert,\n  Button,\n  Form,\n  Row,\n  Col,\n  ListGroup\n} from 'react-bootstrap'\nimport api from '../api'\nimport { useParams, useNavigate } from 'react-router-dom'\n\nexport default function TaskDetail() {\n  const { id } = useParams()\n  const navigate = useNavigate()\n\n  const [task, setTask] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [saving, setSaving] = useState(false)\n  const [deleting, setDeleting] = useState(false)\n  const [selectedFiles, setSelectedFiles] = useState([])\n  const [initialTask, setInitialTask] = useState(null) // Track initial state for diffing\n\n  // Load the task on mount\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const resp = await api.get(`/tasks/${id}`)\n        let data = resp.data\n\n        // unwrap our proxy integration envelope if needed\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body)\n        } else if (data.task) {\n          data = data.task\n        }\n\n        // pull out created/updated timestamps from activity_log\n        if (data.metadata?.activity_log) {\n          const logs = data.metadata.activity_log\n          const findTime = label => {\n            const match = logs.find(l => l.startsWith(label + ' at '))\n            return match ? match.split(' at ')[1] : null\n          }\n          data.created_at = findTime('Created')\n          data.updated_at = findTime('Updated')\n        }\n\n        setTask(data)\n        setInitialTask(data) // Store initial state\n      } catch (err) {\n        console.error('Load error:', err)\n        setError(err.message || 'Failed to load task')\n      } finally {\n        setLoading(false)\n      }\n    })()\n  }, [id])\n\n  // Helper to get changed fields only\n  const getChangedFields = () => {\n    if (!initialTask || !task) return {}\n    \n    const changes = {}\n    \n    // Check each field for changes\n    if (task.title !== initialTask.title) changes.title = task.title\n    if (task.description !== initialTask.description) changes.description = task.description\n    if (task.status !== initialTask.status) changes.status = task.status\n    \n    return changes\n  }\n\n  // Save updates (with optional new attachments)\n  const handleSave = async () => {\n  setSaving(true);\n  setError(null);\n\n  try {\n    const formData = new FormData();\n    const updates = {};\n\n    // Only include changed fields\n    if (task.title !== initialTask.title) updates.title = task.title;\n    if (task.description !== initialTask.description) updates.description = task.description;\n    if (task.status !== initialTask.status) updates.status = task.status;\n    \n    // Always include attachments array to prevent overwrite\n    // updates.attachments = task.attachments || [];\n\n    // Check if we have changes or new files\n    if (selectedFiles.length === 0 && Object.keys(updates).length === 1) { // Only attachments count\n      setError('No changes detected');\n      return;\n    }\n\n    formData.append('data', JSON.stringify(updates));\n    selectedFiles.forEach(f => formData.append('attachments', f));\n    \n\nconsole.log('Sending updates:', updates);\n  console.log('Sending files:', selectedFiles);\n\n    await api.put(`/tasks/${id}`, formData);\n    navigate('/tasks');\n  } catch (err) {\n    // Handle errors  console.error('Save error:', err.response || err)\n      let msg = 'Failed to save changes'\n      const d = err.response?.data\n      if (d) {\n        if (typeof d === 'string') msg = d\n        else if (d.error) msg = d.error\n        else if (d.message) msg = d.message\n        else msg = JSON.stringify(d)\n      } else if (err.message) {\n        msg = err.message\n      }\n      setError(msg)\n  } finally {\n    setSaving(false);\n  }\n};\n  // Delete the task\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return\n    setDeleting(true)\n    setError(null)\n\n    try {\n      await api.delete(`/tasks/${id}`)\n      navigate('/tasks')\n    } catch (err) {\n      console.error('Delete error:', err.response || err)\n      let msg = 'Failed to delete task'\n      const d = err.response?.data\n      if (d) {\n        if (typeof d === 'string') msg = d\n        else if (d.error) msg = d.error\n        else if (d.message) msg = d.message\n        else msg = JSON.stringify(d)\n      } else if (err.message) {\n        msg = err.message\n      }\n      setError(msg)\n    } finally {\n      setDeleting(false)\n    }\n  }\n\n  // Render states\n  if (loading) return <Container className=\"mt-4\"><Spinner animation=\"border\" /></Container>\n  if (error) return <Container className=\"mt-4\"><Alert variant=\"danger\">{error}</Alert></Container>\n  if (!task) return <Container className=\"mt-4\"><Alert variant=\"warning\">Task not found</Alert></Container>\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Task Details</h2>\n      <Form>\n        {/* Title */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskTitle\">\n          <Form.Label column sm={2}>Title</Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"text\"\n              value={task.title||''}\n              onChange={e => setTask({ ...task, title: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n\n        {/* Description */}\n        <Form.Group className=\"mb-3\" controlId=\"taskDescription\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            value={task.description||''}\n            onChange={e => setTask({ ...task, description: e.target.value })}\n          />\n        </Form.Group>\n\n        {/* Status */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskStatus\">\n          <Form.Label column sm={2}>Status</Form.Label>\n          <Col sm={10}>\n            <Form.Select\n              value={task.status||'Pending'}\n              onChange={e => setTask({ ...task, status: e.target.value })}\n            >\n              <option>Pending</option>\n              <option>In Progress</option>\n              <option>Completed</option>\n            </Form.Select>\n          </Col>\n        </Form.Group>\n\n        {/* Created / Last Updated */}\n        <ListGroup className=\"mb-3\">\n          <ListGroup.Item>\n            <strong>Created:</strong>{' '}\n            {task.created_at ? new Date(task.created_at).toLocaleString() : '—'}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Last Updated:</strong>{' '}\n            {task.updated_at ? new Date(task.updated_at).toLocaleString() : '—'}\n          </ListGroup.Item>\n        </ListGroup>\n\n        {/* Existing Attachments */}\n        <h5>Attachments</h5>\n        {task.attachments?.length\n          ? <ListGroup className=\"mb-3\">\n              {task.attachments.map((url,i) => (\n                <ListGroup.Item key={i}>\n                  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                    {url.split('/').pop()}\n                  </a>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          : <p className=\"text-muted\">No attachments yet.</p>\n        }\n\n        {/* Upload New Attachments */}\n        <Form.Group controlId=\"taskFiles\" className=\"mb-4\">\n          <Form.Label>Upload Attachments</Form.Label>\n          <Form.Control\n            type=\"file\"\n            multiple\n            onChange={e => setSelectedFiles(Array.from(e.target.files))}\n          />\n        </Form.Group>\n\n        {/* Action Buttons */}\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={handleSave}\n              disabled={saving}\n            >\n              {saving ? 'Saving…' : 'Save Changes'}\n            </Button>\n          </Col>\n          <Col className=\"text-end\">\n            <Button\n              variant=\"danger\"\n              onClick={handleDelete}\n              disabled={deleting}\n            >\n              {deleting ? 'Deleting…' : 'Delete Task'}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}