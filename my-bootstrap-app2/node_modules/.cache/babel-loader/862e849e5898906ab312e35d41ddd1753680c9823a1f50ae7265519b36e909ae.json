{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\Callback.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Callback.js\nimport { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { CognitoUserPool, CognitoUser } from 'amazon-cognito-identity-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst poolData = {\n  UserPoolId: 'YOUR_USER_POOL_ID',\n  // e.g., eu-north-1_xxxxxxxxx\n  ClientId: 'YOUR_CLIENT_ID' // e.g., 6thkk9j96oa02djeccritml1gr\n};\nconst userPool = new CognitoUserPool(poolData);\nexport default function Callback() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const code = queryParams.get('code');\n    if (code) {\n      // Create a Cognito user (doesn't need to be an actual user)\n      const cognitoUser = new CognitoUser({\n        Username: 'temp',\n        // This can be temporary\n        Pool: userPool\n      });\n\n      // Exchange the authorization code for tokens\n      cognitoUser.getSession((err, session) => {\n        if (err) {\n          console.error('Error getting session:', err);\n          navigate('/');\n          return;\n        }\n\n        // Store tokens in cookies\n        Cookies.set('idToken', session.getIdToken().getJwtToken(), {\n          expires: 1\n        }); // Expires in 1 day\n        Cookies.set('accessToken', session.getAccessToken().getJwtToken(), {\n          expires: 1\n        });\n        Cookies.set('refreshToken', session.getRefreshToken().getToken(), {\n          expires: 30\n        }); // Longer expiry for refresh token\n\n        navigate('/');\n      });\n    } else {\n      navigate('/');\n    }\n  }, [location, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Processing login...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n_s(Callback, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Callback;\nvar _c;\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"names":["useEffect","useNavigate","useLocation","Cookies","CognitoUserPool","CognitoUser","jsxDEV","_jsxDEV","poolData","UserPoolId","ClientId","userPool","Callback","_s","location","navigate","queryParams","URLSearchParams","search","code","get","cognitoUser","Username","Pool","getSession","err","session","console","error","set","getIdToken","getJwtToken","expires","getAccessToken","getRefreshToken","getToken","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/Callback.jsx"],"sourcesContent":["// src/pages/Callback.js\nimport { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { CognitoUserPool, CognitoUser } from 'amazon-cognito-identity-js';\n\nconst poolData = {\n  UserPoolId: 'YOUR_USER_POOL_ID', // e.g., eu-north-1_xxxxxxxxx\n  ClientId: 'YOUR_CLIENT_ID' // e.g., 6thkk9j96oa02djeccritml1gr\n};\n\nconst userPool = new CognitoUserPool(poolData);\n\nexport default function Callback() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const code = queryParams.get('code');\n\n    if (code) {\n      // Create a Cognito user (doesn't need to be an actual user)\n      const cognitoUser = new CognitoUser({\n        Username: 'temp', // This can be temporary\n        Pool: userPool\n      });\n\n      // Exchange the authorization code for tokens\n      cognitoUser.getSession((err, session) => {\n        if (err) {\n          console.error('Error getting session:', err);\n          navigate('/');\n          return;\n        }\n\n        // Store tokens in cookies\n        Cookies.set('idToken', session.getIdToken().getJwtToken(), { expires: 1 }); // Expires in 1 day\n        Cookies.set('accessToken', session.getAccessToken().getJwtToken(), { expires: 1 });\n        Cookies.set('refreshToken', session.getRefreshToken().getToken(), { expires: 30 }); // Longer expiry for refresh token\n\n        navigate('/');\n      });\n    } else {\n      navigate('/');\n    }\n  }, [location, navigate]);\n\n  return <div>Processing login...</div>;\n}"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,eAAe,EAAEC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,QAAQ,GAAG;EACfC,UAAU,EAAE,mBAAmB;EAAE;EACjCC,QAAQ,EAAE,gBAAgB,CAAC;AAC7B,CAAC;AAED,MAAMC,QAAQ,GAAG,IAAIP,eAAe,CAACI,QAAQ,CAAC;AAE9C,eAAe,SAASI,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;IACxD,MAAMC,IAAI,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC;IAEpC,IAAID,IAAI,EAAE;MACR;MACA,MAAME,WAAW,GAAG,IAAIhB,WAAW,CAAC;QAClCiB,QAAQ,EAAE,MAAM;QAAE;QAClBC,IAAI,EAAEZ;MACR,CAAC,CAAC;;MAEF;MACAU,WAAW,CAACG,UAAU,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;QACvC,IAAID,GAAG,EAAE;UACPE,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEH,GAAG,CAAC;UAC5CV,QAAQ,CAAC,GAAG,CAAC;UACb;QACF;;QAEA;QACAZ,OAAO,CAAC0B,GAAG,CAAC,SAAS,EAAEH,OAAO,CAACI,UAAU,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC,CAAC,CAAC;QAC5E7B,OAAO,CAAC0B,GAAG,CAAC,aAAa,EAAEH,OAAO,CAACO,cAAc,CAAC,CAAC,CAACF,WAAW,CAAC,CAAC,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC;QAClF7B,OAAO,CAAC0B,GAAG,CAAC,cAAc,EAAEH,OAAO,CAACQ,eAAe,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE;UAAEH,OAAO,EAAE;QAAG,CAAC,CAAC,CAAC,CAAC;;QAEpFjB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACLA,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,oBAAOR,OAAA;IAAA6B,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACvC;AAAC3B,EAAA,CApCuBD,QAAQ;EAAA,QACbV,WAAW,EACXD,WAAW;AAAA;AAAAwC,EAAA,GAFN7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}