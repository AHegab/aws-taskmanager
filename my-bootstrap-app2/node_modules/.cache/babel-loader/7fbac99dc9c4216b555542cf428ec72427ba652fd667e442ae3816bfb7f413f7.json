{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Helper function to get cookie value\nconst getCookie = name => {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n};\n\n// Add request interceptor\napi.interceptors.request.use(config => {\n  console.log('→ API Request ▶︎', {\n    url: `${config.baseURL}${config.url}`,\n    method: config.method,\n    headers: {\n      ...config.headers\n    }\n  });\n\n  // Get accessToken from cookies\n  const accessToken = getCookie('accessToken');\n  if (accessToken) {\n    // Validate token structure\n    const tokenParts = accessToken.split('.');\n    if (tokenParts.length !== 3) {\n      console.error('Malformed JWT token');\n      document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return config;\n    }\n\n    // Check expiration\n    try {\n      const payload = JSON.parse(atob(tokenParts[1]));\n      if (payload.exp * 1000 < Date.now()) {\n        console.warn('Token expired');\n        document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      }\n    } catch (e) {\n      console.error('Token parsing error:', e);\n    }\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    console.log('   • attached Authorization:', config.headers.Authorization);\n  } else {\n    console.warn('   ⚠️ no accessToken found in cookies');\n  }\n  return config;\n}, err => Promise.reject(err));\n\n// Add response interceptor\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (error.code === 'ERR_NETWORK') {\n    console.error('Network Error:', error);\n    return Promise.reject({\n      ...error,\n      message: 'Network error - please check your connection'\n    });\n  }\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.warn('Unauthorized - attempting token refresh');\n    try {\n      // Get refresh token from cookies\n      const refreshToken = getCookie('refreshToken');\n      if (refreshToken) {\n        // Attempt to refresh the access token\n        const refreshResponse = await axios.post(`${process.env.REACT_APP_API_URL}/refresh-token`, {\n          refreshToken\n        }, {\n          withCredentials: true\n        });\n\n        // Update the access token cookie\n        const newAccessToken = refreshResponse.data.accessToken;\n        document.cookie = `accessToken=${newAccessToken}; path=/; secure; samesite=strict`;\n\n        // Retry the original request\n        error.config.headers.Authorization = `Bearer ${newAccessToken}`;\n        return api.request(error.config);\n      } else {\n        console.warn('No refresh token available');\n        document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n        document.cookie = 'refreshToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      }\n    } catch (refreshError) {\n      console.error('Token refresh failed:', refreshError);\n      document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      document.cookie = 'refreshToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","getCookie","name","value","document","cookie","parts","split","length","pop","shift","interceptors","request","use","config","console","log","url","method","accessToken","tokenParts","error","payload","JSON","parse","atob","exp","Date","now","warn","e","Authorization","err","Promise","reject","response","_error$response","code","message","status","refreshToken","refreshResponse","post","newAccessToken","data","refreshError"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Helper function to get cookie value\nconst getCookie = (name) => {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n};\n\n// Add request interceptor\napi.interceptors.request.use((config) => {\n  console.log('→ API Request ▶︎', {\n    url: `${config.baseURL}${config.url}`,\n    method: config.method,\n    headers: { ...config.headers }\n  });\n\n  // Get accessToken from cookies\n  const accessToken = getCookie('accessToken');\n  \n  if (accessToken) {\n    // Validate token structure\n    const tokenParts = accessToken.split('.');\n    if (tokenParts.length !== 3) {\n      console.error('Malformed JWT token');\n      document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return config;\n    }\n\n    // Check expiration\n    try {\n      const payload = JSON.parse(atob(tokenParts[1]));\n      if (payload.exp * 1000 < Date.now()) {\n        console.warn('Token expired');\n        document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      }\n    } catch (e) {\n      console.error('Token parsing error:', e);\n    }\n\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    console.log('   • attached Authorization:', config.headers.Authorization);\n  } else {\n    console.warn('   ⚠️ no accessToken found in cookies');\n  }\n\n  return config;\n}, err => Promise.reject(err));\n\n// Add response interceptor\napi.interceptors.response.use(\n  response => response,\n  async (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.error('Network Error:', error);\n      return Promise.reject({ ...error, message: 'Network error - please check your connection' });\n    }\n    \n    if (error.response?.status === 401) {\n      console.warn('Unauthorized - attempting token refresh');\n      \n      try {\n        // Get refresh token from cookies\n        const refreshToken = getCookie('refreshToken');\n        \n        if (refreshToken) {\n          // Attempt to refresh the access token\n          const refreshResponse = await axios.post(\n            `${process.env.REACT_APP_API_URL}/refresh-token`,\n            { refreshToken },\n            { withCredentials: true }\n          );\n          \n          // Update the access token cookie\n          const newAccessToken = refreshResponse.data.accessToken;\n          document.cookie = `accessToken=${newAccessToken}; path=/; secure; samesite=strict`;\n          \n          // Retry the original request\n          error.config.headers.Authorization = `Bearer ${newAccessToken}`;\n          return api.request(error.config);\n        } else {\n          console.warn('No refresh token available');\n          document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n          document.cookie = 'refreshToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n        }\n      } catch (refreshError) {\n        console.error('Token refresh failed:', refreshError);\n        document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n        document.cookie = 'refreshToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}