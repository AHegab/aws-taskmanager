{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\TaskDetails.jsx\",\n  _s = $RefreshSig$();\n// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Spinner, Alert, Button, Form, Row, Col, ListGroup } from 'react-bootstrap';\nimport api from '../api'; // your axios instance\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDetail() {\n  _s();\n  var _task$attachments;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  // 1) Load the task on mount\n  useEffect(() => {\n    ;\n    (async () => {\n      try {\n        var _data$metadata;\n        const resp = await api.get(`/tasks/${id}`);\n        let data = resp.data;\n\n        // unwrap our proxy integration envelope if needed\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body);\n        } else if (data.task) {\n          data = data.task;\n        }\n\n        // pull out created/updated timestamps from activity_log\n        if ((_data$metadata = data.metadata) !== null && _data$metadata !== void 0 && _data$metadata.activity_log) {\n          const logs = data.metadata.activity_log;\n          const findTime = label => {\n            const match = logs.find(l => l.startsWith(label + ' at '));\n            return match ? match.split(' at ')[1] : null;\n          };\n          data.created_at = findTime('Created');\n          data.updated_at = findTime('Updated');\n        }\n        setTask(data);\n      } catch (err) {\n        console.error('Load error:', err);\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [id]);\n\n  // 2) Save updates (with optional new attachments)\n  const handleSave = async () => {\n    setSaving(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      // pack the JSON fields under one key\n      formData.append('data', JSON.stringify({\n        title: task.title,\n        description: task.description || '',\n        status: task.status || 'Pending',\n        attachments: task.attachments || []\n      }));\n      // append any new files\n      selectedFiles.forEach(f => formData.append('attachments', f));\n\n      // DO NOT set headers here â€“ let axios detect multipart boundary\n      await api.put(`/tasks/${id}`, formData);\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response;\n      console.error('Save error:', err.response || err);\n      // normalize whatever shape our backend sent us into a string\n      let msg = 'Failed to save changes';\n      const d = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data;\n      if (d) {\n        if (typeof d === 'string') msg = d;else if (d.error) msg = d.error;else if (d.message) msg = d.message;else msg = JSON.stringify(d);\n      } else if (err.message) {\n        msg = err.message;\n      }\n      setError(msg);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // 3) Delete the task\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setDeleting(true);\n    setError(null);\n    try {\n      await api.delete(`/tasks/${id}`);\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response2;\n      console.error('Delete error:', err.response || err);\n      let msg = 'Failed to delete task';\n      const d = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data;\n      if (d) {\n        if (typeof d === 'string') msg = d;else if (d.error) msg = d.error;else if (d.message) msg = d.message;else msg = JSON.stringify(d);\n      } else if (err.message) {\n        msg = err.message;\n      }\n      setError(msg);\n    } finally {\n      setDeleting(false);\n    }\n  };\n\n  // 4) Render states\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 23\n  }, this);\n  if (!task) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Task not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: task.title || '',\n            onChange: e => setTask({\n              ...task,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"taskDescription\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: task.description || '',\n          onChange: e => setTask({\n            ...task,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskStatus\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: task.status || 'Pending',\n            onChange: e => setTask({\n              ...task,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), ' ', task.created_at ? new Date(task.created_at).toLocaleString() : 'â€”']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), ' ', task.updated_at ? new Date(task.updated_at).toLocaleString() : 'â€”']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Attachments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), (_task$attachments = task.attachments) !== null && _task$attachments !== void 0 && _task$attachments.length ? /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: task.attachments.map((url, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: url.split('/').pop()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No attachments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"taskFiles\",\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setSelectedFiles(Array.from(e.target.files))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSave,\n            disabled: saving,\n            children: saving ? 'Savingâ€¦' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleDelete,\n            disabled: deleting,\n            children: deleting ? 'Deletingâ€¦' : 'Delete Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetail, \"XbDkUoLDgXdNSSiqjHA1EHWUmcQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Spinner","Alert","Button","Form","Row","Col","ListGroup","api","useParams","useNavigate","jsxDEV","_jsxDEV","TaskDetail","_s","_task$attachments","id","navigate","task","setTask","loading","setLoading","error","setError","saving","setSaving","deleting","setDeleting","selectedFiles","setSelectedFiles","_data$metadata","resp","get","data","body","JSON","parse","metadata","activity_log","logs","findTime","label","match","find","l","startsWith","split","created_at","updated_at","err","console","message","handleSave","formData","FormData","append","stringify","title","description","status","attachments","forEach","f","put","_err$response","response","msg","d","handleDelete","window","confirm","delete","_err$response2","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","Group","as","controlId","Label","column","sm","Control","type","value","onChange","e","target","rows","Select","Item","Date","toLocaleString","length","map","url","i","href","rel","pop","multiple","Array","from","files","onClick","disabled","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/TaskDetails.jsx"],"sourcesContent":["// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react'\nimport {\n  Container,\n  Spinner,\n  Alert,\n  Button,\n  Form,\n  Row,\n  Col,\n  ListGroup\n} from 'react-bootstrap'\nimport api from '../api'                    // your axios instance\nimport { useParams, useNavigate } from 'react-router-dom'\n\nexport default function TaskDetail() {\n  const { id }           = useParams()\n  const navigate         = useNavigate()\n\n  const [task, setTask]        = useState(null)\n  const [loading, setLoading]  = useState(true)\n  const [error, setError]      = useState(null)\n  const [saving, setSaving]    = useState(false)\n  const [deleting, setDeleting]= useState(false)\n  const [selectedFiles, setSelectedFiles] = useState([])\n\n  // 1) Load the task on mount\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const resp = await api.get(`/tasks/${id}`)\n        let data = resp.data\n\n        // unwrap our proxy integration envelope if needed\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body)\n        } else if (data.task) {\n          data = data.task\n        }\n\n        // pull out created/updated timestamps from activity_log\n        if (data.metadata?.activity_log) {\n          const logs = data.metadata.activity_log\n          const findTime = label => {\n            const match = logs.find(l => l.startsWith(label + ' at '))\n            return match ? match.split(' at ')[1] : null\n          }\n          data.created_at = findTime('Created')\n          data.updated_at = findTime('Updated')\n        }\n\n        setTask(data)\n      } catch (err) {\n        console.error('Load error:', err)\n        setError(err.message || 'Failed to load task')\n      } finally {\n        setLoading(false)\n      }\n    })()\n  }, [id])\n\n  // 2) Save updates (with optional new attachments)\n  const handleSave = async () => {\n    setSaving(true)\n    setError(null)\n\n    try {\n      const formData = new FormData()\n      // pack the JSON fields under one key\n      formData.append(\n        'data',\n        JSON.stringify({\n          title:       task.title,\n          description: task.description || '',\n          status:      task.status || 'Pending',\n          attachments: task.attachments || []\n        })\n      )\n      // append any new files\n      selectedFiles.forEach(f => formData.append('attachments', f))\n\n      // DO NOT set headers here â€“ let axios detect multipart boundary\n      await api.put(`/tasks/${id}`, formData)\n\n      navigate('/tasks')\n    } catch (err) {\n      console.error('Save error:', err.response || err)\n      // normalize whatever shape our backend sent us into a string\n      let msg = 'Failed to save changes'\n      const d = err.response?.data\n      if (d) {\n        if (typeof d === 'string') msg = d\n        else if (d.error) msg = d.error\n        else if (d.message) msg = d.message\n        else msg = JSON.stringify(d)\n      } else if (err.message) {\n        msg = err.message\n      }\n      setError(msg)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  // 3) Delete the task\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return\n    setDeleting(true)\n    setError(null)\n\n    try {\n      await api.delete(`/tasks/${id}`)\n      navigate('/tasks')\n    } catch (err) {\n      console.error('Delete error:', err.response || err)\n      let msg = 'Failed to delete task'\n      const d = err.response?.data\n      if (d) {\n        if (typeof d === 'string') msg = d\n        else if (d.error) msg = d.error\n        else if (d.message) msg = d.message\n        else msg = JSON.stringify(d)\n      } else if (err.message) {\n        msg = err.message\n      }\n      setError(msg)\n    } finally {\n      setDeleting(false)\n    }\n  }\n\n  // 4) Render states\n  if (loading) return <Container className=\"mt-4\"><Spinner animation=\"border\" /></Container>\n  if (error)   return <Container className=\"mt-4\"><Alert variant=\"danger\">{error}</Alert></Container>\n  if (!task)   return <Container className=\"mt-4\"><Alert variant=\"warning\">Task not found</Alert></Container>\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Task Details</h2>\n      <Form>\n        {/* Title */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskTitle\">\n          <Form.Label column sm={2}>Title</Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"text\"\n              value={task.title||''}\n              onChange={e => setTask({ ...task, title: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n\n        {/* Description */}\n        <Form.Group className=\"mb-3\" controlId=\"taskDescription\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            value={task.description||''}\n            onChange={e => setTask({ ...task, description: e.target.value })}\n          />\n        </Form.Group>\n\n        {/* Status */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskStatus\">\n          <Form.Label column sm={2}>Status</Form.Label>\n          <Col sm={10}>\n            <Form.Select\n              value={task.status||'Pending'}\n              onChange={e => setTask({ ...task, status: e.target.value })}\n            >\n              <option>Pending</option>\n              <option>In Progress</option>\n              <option>Completed</option>\n            </Form.Select>\n          </Col>\n        </Form.Group>\n\n        {/* Created / Last Updated */}\n        <ListGroup className=\"mb-3\">\n          <ListGroup.Item>\n            <strong>Created:</strong>{' '}\n            {task.created_at ? new Date(task.created_at).toLocaleString() : 'â€”'}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Last Updated:</strong>{' '}\n            {task.updated_at ? new Date(task.updated_at).toLocaleString() : 'â€”'}\n          </ListGroup.Item>\n        </ListGroup>\n\n        {/* Existing Attachments */}\n        <h5>Attachments</h5>\n        {task.attachments?.length\n          ? <ListGroup className=\"mb-3\">\n              {task.attachments.map((url,i) => (\n                <ListGroup.Item key={i}>\n                  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                    {url.split('/').pop()}\n                  </a>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          : <p className=\"text-muted\">No attachments yet.</p>\n        }\n\n        {/* Upload New Attachments */}\n        <Form.Group controlId=\"taskFiles\" className=\"mb-4\">\n          <Form.Label>Upload Attachments</Form.Label>\n          <Form.Control\n            type=\"file\"\n            multiple\n            onChange={e => setSelectedFiles(Array.from(e.target.files))}\n          />\n        </Form.Group>\n\n        {/* Action Buttons */}\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={handleSave}\n              disabled={saving}\n            >\n              {saving ? 'Savingâ€¦' : 'Save Changes'}\n            </Button>\n          </Col>\n          <Col className=\"text-end\">\n            <Button\n              variant=\"danger\"\n              onClick={handleDelete}\n              disabled={deleting}\n            >\n              {deleting ? 'Deletingâ€¦' : 'Delete Task'}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}