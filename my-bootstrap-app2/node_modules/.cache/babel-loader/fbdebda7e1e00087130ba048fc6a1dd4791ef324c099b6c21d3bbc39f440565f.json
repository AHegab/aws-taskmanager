{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\TaskDetails.jsx\",\n  _s = $RefreshSig$();\n// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Spinner, Alert, Button, Form, Row, Col, ListGroup } from 'react-bootstrap';\nimport api from '../api'; // your axios instance\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDetail() {\n  _s();\n  var _task$attachments;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  // 1) Load the task on mount (unchanged)\n  useEffect(() => {\n    ;\n    (async () => {\n      try {\n        var _data$metadata;\n        const resp = await api.get(`/tasks/${id}`);\n        let data = resp.data;\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body);\n        } else if (data.task) {\n          data = data.task;\n        }\n        // extract timestamps from activity_log if present\n        if ((_data$metadata = data.metadata) !== null && _data$metadata !== void 0 && _data$metadata.activity_log) {\n          const logs = data.metadata.activity_log;\n          const findTime = label => {\n            const m = logs.find(l => l.startsWith(label + ' at '));\n            return m ? m.split(' at ')[1] : null;\n          };\n          data.created_at = findTime('Created');\n          data.updated_at = findTime('Updated');\n        }\n        setTask(data);\n      } catch (err) {\n        console.error('Load error:', err);\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [id]);\n\n  // 2) Save updates (with optional new attachments)\n  const handleSave = async () => {\n    setSaving(true);\n    setError(null);\n    try {\n      let response;\n      if (selectedFiles.length > 0) {\n        // multipart/form-data upload\n        const formData = new FormData();\n        // append each field you want to update\n        formData.append('title', task.title);\n        formData.append('description', task.description || '');\n        formData.append('status', task.status || 'Pending');\n        // if you have priority or dueDate fields:\n        if (task.priority) formData.append('priority', task.priority);\n        if (task.dueDate) formData.append('dueDate', task.dueDate);\n\n        // append new files under whatever key—the Lambda parser will pick them up\n        selectedFiles.forEach(file => {\n          formData.append('file', file);\n        });\n\n        // do NOT set Content-Type header; let axios fill in boundary\n        response = await api.put(`/tasks/${id}`, formData);\n      } else {\n        // simple JSON partial update\n        response = await api.put(`/tasks/${id}`, {\n          title: task.title,\n          description: task.description || '',\n          status: task.status || 'Pending',\n          priority: task.priority,\n          dueDate: task.dueDate,\n          // if you want to override attachments, include them here:\n          attachments: task.attachments\n        });\n      }\n\n      // on success go back\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response;\n      console.error('Save error:', err.response || err);\n      let msg = 'Failed to save changes';\n      const d = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data;\n      if (d) {\n        if (typeof d === 'string') msg = d;else if (d.error) msg = d.error;else if (d.message) msg = d.message;else msg = JSON.stringify(d);\n      } else if (err.message) {\n        msg = err.message;\n      }\n      setError(msg);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // 3) Delete (unchanged)\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setDeleting(true);\n    setError(null);\n    try {\n      await api.delete(`/tasks/${id}`);\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response2;\n      console.error('Delete error:', err.response || err);\n      let msg = 'Failed to delete task';\n      const d = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data;\n      if (d) {\n        if (typeof d === 'string') msg = d;else if (d.error) msg = d.error;else if (d.message) msg = d.message;else msg = JSON.stringify(d);\n      } else if (err.message) {\n        msg = err.message;\n      }\n      setError(msg);\n    } finally {\n      setDeleting(false);\n    }\n  };\n\n  // 4) Render states (unchanged)\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 23\n  }, this);\n  if (!task) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Task not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Attachments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), (_task$attachments = task.attachments) !== null && _task$attachments !== void 0 && _task$attachments.length ? /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: task.attachments.map((url, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: url.split('/').pop()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No attachments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"taskFiles\",\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setSelectedFiles(Array.from(e.target.files))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSave,\n            disabled: saving,\n            children: saving ? 'Saving…' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleDelete,\n            disabled: deleting,\n            children: deleting ? 'Deleting…' : 'Delete Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetail, \"XbDkUoLDgXdNSSiqjHA1EHWUmcQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Spinner","Alert","Button","Form","Row","Col","ListGroup","api","useParams","useNavigate","jsxDEV","_jsxDEV","TaskDetail","_s","_task$attachments","id","navigate","task","setTask","loading","setLoading","error","setError","saving","setSaving","deleting","setDeleting","selectedFiles","setSelectedFiles","_data$metadata","resp","get","data","body","JSON","parse","metadata","activity_log","logs","findTime","label","m","find","l","startsWith","split","created_at","updated_at","err","console","message","handleSave","response","length","formData","FormData","append","title","description","status","priority","dueDate","forEach","file","put","attachments","_err$response","msg","d","stringify","handleDelete","window","confirm","delete","_err$response2","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","url","i","Item","href","target","rel","pop","Group","controlId","Label","Control","type","multiple","onChange","e","Array","from","files","onClick","disabled","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/TaskDetails.jsx"],"sourcesContent":["// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react'\nimport {\n  Container,\n  Spinner,\n  Alert,\n  Button,\n  Form,\n  Row,\n  Col,\n  ListGroup\n} from 'react-bootstrap'\nimport api from '../api'                    // your axios instance\nimport { useParams, useNavigate } from 'react-router-dom'\n\nexport default function TaskDetail() {\n  const { id }           = useParams()\n  const navigate         = useNavigate()\n\n  const [task, setTask]        = useState(null)\n  const [loading, setLoading]  = useState(true)\n  const [error, setError]      = useState(null)\n  const [saving, setSaving]    = useState(false)\n  const [deleting, setDeleting]= useState(false)\n  const [selectedFiles, setSelectedFiles] = useState([])\n\n  // 1) Load the task on mount (unchanged)\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const resp = await api.get(`/tasks/${id}`)\n        let data = resp.data\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body)\n        } else if (data.task) {\n          data = data.task\n        }\n        // extract timestamps from activity_log if present\n        if (data.metadata?.activity_log) {\n          const logs = data.metadata.activity_log\n          const findTime = label => {\n            const m = logs.find(l => l.startsWith(label + ' at '))\n            return m ? m.split(' at ')[1] : null\n          }\n          data.created_at = findTime('Created')\n          data.updated_at = findTime('Updated')\n        }\n        setTask(data)\n      } catch (err) {\n        console.error('Load error:', err)\n        setError(err.message || 'Failed to load task')\n      } finally {\n        setLoading(false)\n      }\n    })()\n  }, [id])\n\n  // 2) Save updates (with optional new attachments)\n  const handleSave = async () => {\n    setSaving(true)\n    setError(null)\n\n    try {\n      let response\n\n      if (selectedFiles.length > 0) {\n        // multipart/form-data upload\n        const formData = new FormData()\n        // append each field you want to update\n        formData.append('title',       task.title)\n        formData.append('description', task.description || '')\n        formData.append('status',      task.status || 'Pending')\n        // if you have priority or dueDate fields:\n        if (task.priority) formData.append('priority', task.priority)\n        if (task.dueDate)   formData.append('dueDate', task.dueDate)\n\n        // append new files under whatever key—the Lambda parser will pick them up\n        selectedFiles.forEach(file => {\n          formData.append('file', file)\n        })\n\n        // do NOT set Content-Type header; let axios fill in boundary\n        response = await api.put(`/tasks/${id}`, formData)\n      } else {\n        // simple JSON partial update\n        response = await api.put(`/tasks/${id}`, {\n          title:       task.title,\n          description: task.description || '',\n          status:      task.status || 'Pending',\n          priority:    task.priority,\n          dueDate:     task.dueDate,\n          // if you want to override attachments, include them here:\n          attachments: task.attachments\n        })\n      }\n\n      // on success go back\n      navigate('/tasks')\n    } catch (err) {\n      console.error('Save error:', err.response || err)\n      let msg = 'Failed to save changes'\n      const d = err.response?.data\n      if (d) {\n        if (typeof d === 'string') msg = d\n        else if (d.error)         msg = d.error\n        else if (d.message)       msg = d.message\n        else                      msg = JSON.stringify(d)\n      } else if (err.message) {\n        msg = err.message\n      }\n      setError(msg)\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  // 3) Delete (unchanged)\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return\n    setDeleting(true)\n    setError(null)\n\n    try {\n      await api.delete(`/tasks/${id}`)\n      navigate('/tasks')\n    } catch (err) {\n      console.error('Delete error:', err.response || err)\n      let msg = 'Failed to delete task'\n      const d = err.response?.data\n      if (d) {\n        if (typeof d === 'string') msg = d\n        else if (d.error)         msg = d.error\n        else if (d.message)       msg = d.message\n        else                      msg = JSON.stringify(d)\n      } else if (err.message) {\n        msg = err.message\n      }\n      setError(msg)\n    } finally {\n      setDeleting(false)\n    }\n  }\n\n  // 4) Render states (unchanged)\n  if (loading) return <Container className=\"mt-4\"><Spinner animation=\"border\" /></Container>\n  if (error)   return <Container className=\"mt-4\"><Alert variant=\"danger\">{error}</Alert></Container>\n  if (!task)   return <Container className=\"mt-4\"><Alert variant=\"warning\">Task not found</Alert></Container>\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Task Details</h2>\n      <Form>\n        {/* ... your existing form markup for title, description, status, etc. ... */}\n\n        {/* Existing Attachments */}\n        <h5>Attachments</h5>\n        {task.attachments?.length\n          ? <ListGroup className=\"mb-3\">\n              {task.attachments.map((url,i) => (\n                <ListGroup.Item key={i}>\n                  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                    {url.split('/').pop()}\n                  </a>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          : <p className=\"text-muted\">No attachments yet.</p>\n        }\n\n        {/* Upload New Attachments */}\n        <Form.Group controlId=\"taskFiles\" className=\"mb-4\">\n          <Form.Label>Upload Attachments</Form.Label>\n          <Form.Control\n            type=\"file\"\n            multiple\n            onChange={e => setSelectedFiles(Array.from(e.target.files))}\n          />\n        </Form.Group>\n\n        {/* Action Buttons */}\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={handleSave}\n              disabled={saving}\n            >\n              {saving ? 'Saving…' : 'Save Changes'}\n            </Button>\n          </Col>\n          <Col className=\"text-end\">\n            <Button\n              variant=\"danger\"\n              onClick={handleDelete}\n              disabled={deleting}\n            >\n              {deleting ? 'Deleting…' : 'Delete Task'}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}