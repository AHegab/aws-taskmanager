{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\TaskDetails.jsx\",\n  _s = $RefreshSig$();\n// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Spinner, Alert, Button, Form, Row, Col, ListGroup } from 'react-bootstrap';\nimport api from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [task, setTask] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  useEffect(() => {\n    async function loadTask() {\n      try {\n        var _data$metadata;\n        console.log('Loading task with ID:', id);\n        const resp = await api.get(`/tasks/${id}`);\n        console.log('got task payload:', resp.data);\n\n        // 1) Unwrap the envelope\n        let data = resp.data;\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body);\n        } else if (data.task) {\n          data = data.task;\n        }\n\n        // 2) Extract created_at / updated_at from metadata.activity_log\n        if ((_data$metadata = data.metadata) !== null && _data$metadata !== void 0 && _data$metadata.activity_log) {\n          const logs = data.metadata.activity_log;\n          const findTime = label => {\n            const entry = logs.find(l => l.startsWith(label + ' at '));\n            return entry ? entry.split(' at ')[1] : null;\n          };\n          data.created_at = findTime('Created');\n          data.updated_at = findTime('Updated');\n        }\n        setTask(data);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadTask();\n  }, [id]);\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      const formData = new FormData();\n      // pack updatable fields\n      formData.append('data', JSON.stringify({\n        title: task.title,\n        description: task.description || '',\n        status: task.status || 'Pending',\n        attachments: task.attachments || []\n      }));\n      // append any new files\n      selectedFiles.forEach(f => formData.append('attachments', f));\n\n      // let Axios set the multipart boundary for you\n      await api.put(`/tasks/${id}`, formData);\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response;\n      console.error('Save error:', err.response || err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message || 'Failed to save changes');\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setDeleting(true);\n    try {\n      await api.delete(`/tasks/${id}`);\n      navigate('/tasks');\n    } catch (err) {\n      var _err$response2;\n      console.error('Delete error:', err.response || err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message || 'Failed to delete task');\n    } finally {\n      setDeleting(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 25\n  }, this);\n  if (!task) return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Task not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: task.title || '',\n            onChange: e => setTask({\n              ...task,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"taskDescription\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: task.description || '',\n          onChange: e => setTask({\n            ...task,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"taskStatus\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: task.status || 'Pending',\n            onChange: e => setTask({\n              ...task,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), ' ', task.created_at ? new Date(task.created_at).toLocaleString() : '—']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), ' ', task.updated_at ? new Date(task.updated_at).toLocaleString() : '—']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Attachments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), task.attachments && task.attachments.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mb-3\",\n        children: task.attachments.map((url, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: url.split('/').pop()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No attachments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"taskFiles\",\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          multiple: true,\n          onChange: e => setSelectedFiles([...e.target.files])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSave,\n            disabled: saving,\n            children: saving ? 'Saving…' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleDelete,\n            disabled: deleting,\n            children: deleting ? 'Deleting…' : 'Delete Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetail, \"XbDkUoLDgXdNSSiqjHA1EHWUmcQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Spinner","Alert","Button","Form","Row","Col","ListGroup","api","useParams","useNavigate","jsxDEV","_jsxDEV","TaskDetail","_s","id","navigate","task","setTask","loading","setLoading","error","setError","saving","setSaving","deleting","setDeleting","selectedFiles","setSelectedFiles","loadTask","_data$metadata","console","log","resp","get","data","body","JSON","parse","metadata","activity_log","logs","findTime","label","entry","find","l","startsWith","split","created_at","updated_at","err","message","handleSave","formData","FormData","append","stringify","title","description","status","attachments","forEach","f","put","_err$response","response","handleDelete","window","confirm","delete","_err$response2","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","Group","as","controlId","Label","column","sm","Control","type","value","onChange","e","target","rows","Select","Item","Date","toLocaleString","length","map","url","i","href","rel","pop","multiple","files","onClick","disabled","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/TaskDetails.jsx"],"sourcesContent":["// src/pages/TaskDetail.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Spinner,\n  Alert,\n  Button,\n  Form,\n  Row,\n  Col,\n  ListGroup\n} from 'react-bootstrap';\nimport api from '../api';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function TaskDetail() {\n  const { id }           = useParams();\n  const navigate         = useNavigate();\n\n  const [task, setTask]  = useState(null);\n  const [loading, setLoading]   = useState(true);\n  const [error, setError]       = useState(null);\n  const [saving, setSaving]     = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  useEffect(() => {\n    async function loadTask() {\n      try {\n        console.log('Loading task with ID:', id);\n        \n        const resp = await api.get(`/tasks/${id}`);\n        console.log('got task payload:', resp.data);\n\n        // 1) Unwrap the envelope\n        let data = resp.data;\n        if (data && typeof data.body === 'string') {\n          data = JSON.parse(data.body);\n        } else if (data.task) {\n          data = data.task;\n        }\n\n        // 2) Extract created_at / updated_at from metadata.activity_log\n        if (data.metadata?.activity_log) {\n          const logs = data.metadata.activity_log;\n          const findTime = label => {\n            const entry = logs.find(l => l.startsWith(label + ' at '));\n            return entry ? entry.split(' at ')[1] : null;\n          };\n          data.created_at = findTime('Created');\n          data.updated_at = findTime('Updated');\n        }\n\n        setTask(data);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load task');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadTask();\n  }, [id]);\n\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      const formData = new FormData();\n      // pack updatable fields\n      formData.append(\n        'data',\n        JSON.stringify({\n          title:       task.title,\n          description: task.description || '',\n          status:      task.status || 'Pending',\n          attachments: task.attachments || []\n        })\n      );\n      // append any new files\n      selectedFiles.forEach(f => formData.append('attachments', f));\n\n      // let Axios set the multipart boundary for you\n      await api.put(`/tasks/${id}`, formData);\n\n      navigate('/tasks');\n    } catch (err) {\n      console.error('Save error:', err.response || err);\n      setError(err.response?.data || err.message || 'Failed to save changes');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    setDeleting(true);\n    try {\n      await api.delete(`/tasks/${id}`);\n      navigate('/tasks');\n    } catch (err) {\n      console.error('Delete error:', err.response || err);\n      setError(err.response?.data || err.message || 'Failed to delete task');\n    } finally {\n      setDeleting(false);\n    }\n  };\n\n  if (loading)   return <Container className=\"mt-4\"><Spinner animation=\"border\" /></Container>;\n  if (error)     return <Container className=\"mt-4\"><Alert variant=\"danger\">{error}</Alert></Container>;\n  if (!task)     return <Container className=\"mt-4\"><Alert variant=\"warning\">Task not found</Alert></Container>;\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Task Details</h2>\n      <Form>\n        {/* Title */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskTitle\">\n          <Form.Label column sm={2}>Title</Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"text\"\n              value={task.title || ''}\n              onChange={e => setTask({ ...task, title: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n\n        {/* Description */}\n        <Form.Group className=\"mb-3\" controlId=\"taskDescription\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            value={task.description || ''}\n            onChange={e => setTask({ ...task, description: e.target.value })}\n          />\n        </Form.Group>\n\n        {/* Status */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"taskStatus\">\n          <Form.Label column sm={2}>Status</Form.Label>\n          <Col sm={10}>\n            <Form.Select\n              value={task.status || 'Pending'}\n              onChange={e => setTask({ ...task, status: e.target.value })}\n            >\n              <option>Pending</option>\n              <option>In Progress</option>\n              <option>Completed</option>\n            </Form.Select>\n          </Col>\n        </Form.Group>\n\n        {/* Read-only fields */}\n        <ListGroup className=\"mb-3\">\n         \n          <ListGroup.Item>\n            <strong>Created:</strong>{' '}\n            {task.created_at\n              ? new Date(task.created_at).toLocaleString()\n              : '—'}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <strong>Last Updated:</strong>{' '}\n            {task.updated_at\n              ? new Date(task.updated_at).toLocaleString()\n              : '—'}\n          </ListGroup.Item>\n        </ListGroup>\n\n        {/* Existing Attachments */}\n        <h5>Attachments</h5>\n        {task.attachments && task.attachments.length > 0 ? (\n          <ListGroup className=\"mb-3\">\n            {task.attachments.map((url, i) => (\n              <ListGroup.Item key={i}>\n                <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                  {url.split('/').pop()}\n                </a>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        ) : (\n          <p className=\"text-muted\">No attachments yet.</p>\n        )}\n\n        {/* New Attachments */}\n        <Form.Group controlId=\"taskFiles\" className=\"mb-4\">\n          <Form.Label>Upload Attachments</Form.Label>\n          <Form.Control\n            type=\"file\"\n            multiple\n            onChange={e => setSelectedFiles([...e.target.files])}\n          />\n        </Form.Group>\n\n        {/* Action Buttons */}\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              onClick={handleSave}\n              disabled={saving}\n            >\n              {saving ? 'Saving…' : 'Save Changes'}\n            </Button>\n          </Col>\n          <Col className=\"text-end\">\n            <Button\n              variant=\"danger\"\n              onClick={handleDelete}\n              disabled={deleting}\n            >\n              {deleting ? 'Deleting…' : 'Delete Task'}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}