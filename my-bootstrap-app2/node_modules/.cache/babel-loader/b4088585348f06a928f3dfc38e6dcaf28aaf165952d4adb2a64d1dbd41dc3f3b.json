{"ast":null,"code":"var _jsxFileName = \"d:\\\\Github\\\\Tasks\\\\aws-taskmanager\\\\my-bootstrap-app2\\\\src\\\\pages\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Tasks.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, Spinner, Alert, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        const resp = await api.get('/tasks');\n        console.log('raw tasks payload:', resp.data);\n        const extractTasks = input => {\n          let data = input;\n\n          // 1) Handle AWS Lambda proxy-style responses\n          if (data && typeof data.statusCode === 'number') {\n            // error status from proxy\n            if (data.statusCode !== 200) {\n              let errMsg = 'Failed to load tasks';\n              try {\n                const parsedErr = JSON.parse(data.body);\n                if (parsedErr.error) errMsg = parsedErr.error;\n              } catch {}\n              ;\n              throw new Error(errMsg);\n            }\n            // parse out the real payload\n            try {\n              data = JSON.parse(data.body);\n            } catch (parseErr) {\n              console.error('Failed to parse response body:', parseErr);\n              return [];\n            }\n          }\n\n          // 2) Direct array\n          if (Array.isArray(data)) return data;\n          // 3) data.tasks property\n          if (data && Array.isArray(data.tasks)) return data.tasks;\n          // 4) JSON string in data.body (unlikely here)\n          if (data && typeof data.body === 'string') {\n            try {\n              const parsed = JSON.parse(data.body);\n              if (Array.isArray(parsed)) return parsed;\n              if (parsed && Array.isArray(parsed.tasks)) return parsed.tasks;\n            } catch (e) {\n              console.error('Tasks JSON parse error', e);\n            }\n          }\n\n          // fallback\n          return [];\n        };\n\n        // extract tasks or throw if error status\n        const list = extractTasks(resp.data);\n        setTasks(Array.isArray(list) ? list : []);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load tasks');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTasks();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No tasks found.\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-task\",\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), task.description && /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Status: \", task.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: Link,\n              to: `/tasks/${task.taskId}`,\n              variant: \"primary\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","Card","Button","Spinner","Alert","Container","Link","api","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","resp","get","console","log","data","extractTasks","input","statusCode","errMsg","parsedErr","JSON","parse","body","Error","parseErr","Array","isArray","parsed","e","list","err","message","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","length","to","map","task","Body","Title","title","description","Text","status","as","taskId","_c","$RefreshReg$"],"sources":["d:/Github/Tasks/aws-taskmanager/my-bootstrap-app2/src/pages/Tasks.jsx"],"sourcesContent":["// src/pages/Tasks.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, Spinner, Alert, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport api from '../api';\n\nexport default function Tasks() {\n  const [tasks, setTasks]     = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError]     = useState(null);\n\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        const resp = await api.get('/tasks');\n        console.log('raw tasks payload:', resp.data);\n\n        const extractTasks = (input) => {\n          let data = input;\n\n          // 1) Handle AWS Lambda proxy-style responses\n          if (data && typeof data.statusCode === 'number') {\n            // error status from proxy\n            if (data.statusCode !== 200) {\n              let errMsg = 'Failed to load tasks';\n              try {\n                const parsedErr = JSON.parse(data.body);\n                if (parsedErr.error) errMsg = parsedErr.error;\n              } catch {};\n              throw new Error(errMsg);\n            }\n            // parse out the real payload\n            try {\n              data = JSON.parse(data.body);\n            } catch (parseErr) {\n              console.error('Failed to parse response body:', parseErr);\n              return [];\n            }\n          }\n\n          // 2) Direct array\n          if (Array.isArray(data)) return data;\n          // 3) data.tasks property\n          if (data && Array.isArray(data.tasks)) return data.tasks;\n          // 4) JSON string in data.body (unlikely here)\n          if (data && typeof data.body === 'string') {\n            try {\n              const parsed = JSON.parse(data.body);\n              if (Array.isArray(parsed)) return parsed;\n              if (parsed && Array.isArray(parsed.tasks)) return parsed.tasks;\n            } catch (e) {\n              console.error('Tasks JSON parse error', e);\n            }\n          }\n\n          // fallback\n          return [];\n        };\n\n        // extract tasks or throw if error status\n        const list = extractTasks(resp.data);\n        setTasks(Array.isArray(list) ? list : []);\n      } catch (err) {\n        console.error(err);\n        setError(err.message || 'Failed to load tasks');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTasks();\n  }, []);\n\n  if (loading) {\n    return (\n      <Container className=\"mt-4 text-center\">\n        <Spinner animation=\"border\" />\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container className=\"mt-4\">\n        <Alert variant=\"danger\">{error}</Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"mt-4\">\n      <h2>Your Tasks</h2>\n      {tasks.length === 0 ? (\n        <p>\n          No tasks found.{' '}\n          <Link to=\"/create-task\">Create one now</Link>\n        </p>\n      ) : (\n        <div className=\"row\">\n          {tasks.map((task) => (\n            <div key={task.taskId} className=\"col-md-4 mb-4\">\n              <Card className=\"h-100\">\n                <Card.Body>\n                  <Card.Title>{task.title}</Card.Title>\n                  {task.description && (\n                    <Card.Text>{task.description}</Card.Text>\n                  )}\n                  <Card.Text>\n                    <small>Status: {task.status}</small>\n                  </Card.Text>\n                  <Button\n                    as={Link}\n                    to={`/tasks/${task.taskId}`}\n                    variant=\"primary\"\n                  >\n                    View Details\n                  </Button>\n                </Card.Body>\n              </Card>\n            </div>\n          ))}\n        </div>\n      )}\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}